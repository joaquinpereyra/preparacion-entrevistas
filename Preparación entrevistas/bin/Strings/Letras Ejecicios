BackSpaceStringCompare
Given two strings s and t, return true if they are equal when both are typed into empty text editors. '#' means a backspace character.

Note that after backspacing an empty text, the text will continue empty.
Example 1:

Input: s = "ab#c", t = "ad#c"
Output: true
Explanation: Both s and t become "ac".
Example 2:

Input: s = "ab##", t = "c#d#"
Output: true
Explanation: Both s and t become "".
Example 3:

Input: s = "a#c", t = "b"
Output: false
Explanation: s becomes "c" while t becomes "b".
 

Constraints:

1 <= s.length, t.length <= 200
s and t only contain lowercase letters and '#' characters.







package Strings;

import java.util.ArrayList;
import java.util.HashMap;

public class LongestSubstringithoutRepeatCharacters {

    

    public static int lengthOfLongestSubtring(String str)
    {
        int currLong = 0;
        int longest = 0;
        if(str  == null)
        {
            return 0;
        }
        int strLength = str.length();
        if( strLength <=1)
        {
            return strLength;
        }
        HashMap res = new HashMap<>();
        for(int p2 = 0; p2 < strLength; p2++)
        {
            char c = str.charAt(p2);
            if(res.get(c) != null)
            {
                res.clear();
                p2--;
                currLong = 0;
            }
            else{
                currLong++;
                res.put(c, c);
            }
            if(currLong > longest)
            {
                longest = currLong;
            }
                
        }
        return longest;
         
    }
    public static void main(String[] args) throws Exception {
        String string = "dvacdf";
        System.out.println(lengthOfLongestSubtring(string));
    }

    
}
